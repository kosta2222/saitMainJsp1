use my_sait;
insert into article (time_of,header_of_article,type_of_article,text) values(NOW(),"tipi_danih","programing",
"<h2>Примитивные типы данных</h2>
<p><strong>Примитивные типы данных</strong> &#8211; это базовые типы данных языка программирования. Их ключевая особенность в том, что данные в них, в отличие от ссылочных типов, располагаются непосредственно [&#8220;в переменной&#8221;.] на участке памяти компьютера в котором находится переменная. Перечислим и опишем основные примитивные типы данных в программировании.</p>
<ul>
<li><strong>Логический тип данных</strong> или <strong>булевый</strong>. Переменные данного вида могу принимать лишь два значения: истина (true, либо 1) или ложь (false, либо 0). В различных языках программирования булевы переменные объявляются с помощью ключевого слова bool либо boolean. Логический тип данных имеет широчайшее применение (как собственно и другие типы). Например, он фигурирует в условных операторах ветвления (if) и операторах цикла (for, while, do-while).</li>
<li><strong>Целочисленный тип данных</strong>. Обычно объявляется ключевым словом int или integer. Переменные данного типа могут принимать только целочисленные значения. Часто тип int занимает четыре байта (2<sup>32</sup> = 4294967296), следовательно переменные могут принимать значения от &#8211; 2 147 483 648 и до 2 147 483 647 в случае, когда целый тип учитывает знак числа. Если использовать беззнаковый целый тип данных (unsigned int), то его диапазон значений от 0 до 4294967295. В языке программирования Java целый тип всегда 4 байта. В языках Си и C# предполагаемый размер также 4 байта, но на деле &#8211; всё зависит от конкретной реализации языка на программной платформе.<br />
Данный тезис относится не только к типу int. Размер каждого примитивного типа данных в любой реализации языка Java всегда строго определен и одинаков. В C-подобных языках это не так.</li>
<li><strong>Целочисленный тип byte</strong>. Исходя из названия типа, он занимает в памяти один байт, то есть восемь бит. 2<sup>8</sup> = 256 &#8211; такое количество значений он может в себя вместить. Если говорить конкретно, то в случае, если тип byte со знаком, то диапазон от -128 до 127 (не забываем, что есть еще число ноль); когда byte беззнаковый, то от 0 до 255.</li>
<li><strong>Короткий целый тип short</strong>. В памяти для него выделено 2 байта = 16 бит (2<sup>16</sup> = 65536). Диапазон принимаемых значений типом short со знаком &#8211; это [-32768; 32767].</li>
<li><strong>Длинный целый тип long</strong>. Длинный целый тип занимает в памяти 8 байт, то есть 64 бита. 2<sup>64</sup> = 1,8446744 × 10<sup>19</sup>. Диапазон допустимых значений очень велик: в случае знакового типа, это [-9223372036854775808; 9223372036854775807]. Кроме того, модификатор long можно использовать в сочетании с другими типами (long пишется перед названием типа, например: long double), расширяя, тем самым, диапазон допустимых значений типа согласно спецификации конкретного языка программирования.</li>
<li><strong>Число с плавающей запятой</strong>. Этот тип обозначается ключевым словом <strong>float</strong>, также же этот тип называют вещественным типом одинарной точности. float &#8211; это ни что иное, как десятичная дробь (привычная нам на письме), но в памяти компьютера она представляется в виде экспоненциальной записи: состоит из <em>мантиссы</em> и <em>показателя степени</em>. Например: 0,0506 = 506,0 ⋅ 10<sup>-4</sup>, где 506 &#8211; мантисса, а -4 &#8211; показатель степени десяти. Размер типа данных float в спецификации языка Си четко не определен.</li>
<li><strong>Число с плавающей запятой двойной точности</strong> &#8211; это тип <strong>double</strong>. Данный тип схож с типом float, единственное их различие &#8211; это размер в памяти и, соответственно, диапазон принимаемых значений. Естественно тип double больше; но всё зависит от реализации языка, говоря строго: тип double по крайней мере должен быть не меньше, чем float.</li>
<li><strong>Символьный тип данных</strong> занимает в памяти один байт &#8211; если используется кодировка ASCII и два байта &#8211; если установлена кодировка Unicode. Данный тип по сути является целым числом. Цифра, хранящаяся в переменной символьного типа &#8211; это номер символа в таблице кодировки. Обычно объявляется с помощью ключевого слова char. Нужно четко представлять себе, что char &#8211; это число, и работать с ним, как с числом, в некоторых случаях очень удобно и эффективно.</li>
</ul>
");