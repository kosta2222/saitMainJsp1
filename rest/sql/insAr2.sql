use my_sait;
insert into article (time_of,header_of_article,type_of_article,text) values(NOW(),"excep","programing",
"
<p>1. Дайте определение понятию “исключение”<br />
2. Какова иерархия исключений.<br />
3. Можно/нужно ли обрабатывать ошибки jvm?<br />
4. Какие существуют способы обработки исключений?<br />
5. О чем говорит ключевое слово throws?<br />
6. В чем особенность блока finally? Всегда ли он исполняется?<br />
7. Может ли не быть ни одного блока catch при отлавливании исключений?<br />
8. Могли бы вы придумать ситуацию, когда блок finally не будет выполнен?<br />
9. Может ли один блок catch отлавливать несколько исключений (с одной и разных веток наследований)?<br />
10. Что вы знаете об обрабатываемых и не обрабатываемых (catched/uncatched) исключениях?<br />
11. В чем особенность RuntimeException?<br />
12. Как написать собственное (“пользовательское”) исключение? Какими мотивами вы будете руководствоваться при выборе типа исключения: checked/unchecked?<br />
13. Какой оператор позволяет принудительно выбросить исключение?<br />
14. Есть ли дополнительные условия к методу, который потенциально может выбросить исключение?<br />
15. Может ли метод main выбросить исключение во вне и если да, то где будет происходить обработка данного исключения?<br />
16. Если оператор return содержится и в блоке catch и в finally, какой из них “главнее”?<br />
17. Что вы знаете о OutOfMemoryError?<br />
18. Что вы знаете о SQLException? К какому типу checked или unchecked оно относится, почему?<br />
19. Что такое Error? В каком случае используется Error. Приведите пример Error’а.<br />
20. Какая конструкция используется в Java для обработки исключений?<br />
21. Предположим, есть блок try-finally. В блоке try возникло исключение и выполнение переместилось в блок finally. В блоке finally тоже возникло исключение. Какое из двух исключений “выпадет” из блока try-finally? Что случится со вторым исключением?<br />
22. Предположим, есть метод, который может выбросить IOException и FileNotFoundException в какой последовательности должны идти блоки catch? Сколько блоков catch будет выполнено?</p>
<h3>Ответы</h3>
<h4>1. Дайте определение понятию “исключение”</h4>
<p><strong>Исключение </strong>&#8212; это проблема(ошибка) возникающая во время выполнения программы. Исключения могут возникать во многих случаях, например:</p>
<ol>
<li>Пользователь ввел некорректные данные.</li>
<li>Файл, к которому обращается программа, не найден.</li>
<li>Сетевое соединение с сервером было утеряно во время передачи данных. И т.д.</li>
</ol>
<p>Все исключения в Java являются объектами. Поэтому они могут порождаться не только автоматически при возникновении исключительной ситуации, но и создаваться самим разработчиком.</p>
<h4>2. Какова иерархия исключений.</h4>
<p>Исключения делятся на несколько классов, но все они имеют общего предка — класс Throwable. Его потомками являются подклассы Exception и Error.</p>
<p>Исключения (Exceptions) являются результатом проблем в программе, которые в принципе решаемы и предсказуемы. Например, произошло деление на ноль в целых числах.</p>
<p>Ошибки (Errors) представляют собой более серьёзные проблемы, которые, согласно спецификации Java, не следует пытаться обрабатывать в собственной программе, поскольку они связаны с проблемами уровня JVM. Например, исключения такого рода возникают, если закончилась память, доступная виртуальной машине. Программа дополнительную память всё равно не сможет обеспечить для JVM.</p>
<p>В Java все исключения делятся на два типа: контролируемые исключения (checked) и неконтролируемые исключения (unchecked), к которым относятся ошибки (Errors) и исключения времени выполнения (RuntimeExceptions, потомок класса Exception).</p>
<p>Контролируемые исключения представляют собой ошибки, которые можно и нужно обрабатывать в программе, к этому типу относятся все потомки класса Exception (но не RuntimeException).</p>
<h4>3. Можно/нужно ли обрабатывать ошибки jvm?</h4>
<p>Обрабатывать можно, но делать этого не стоит. Разработчику не предоставлены инструменты для обработки ошибок системы и виртуальной машины.</p>
<h4>4. Какие существуют способы обработки исключений?</h4>
<div>В Java есть пять ключевых слов для работы с исключениями:</div>
<div>
<ol>
<li><strong>try </strong>&#8212; данное ключевое слово используется для отметки начала блока кода, который потенциально может привести к ошибке.</li>
<li><strong>catch </strong>&#8212; ключевое слово для отметки начала блока кода, предназначенного для перехвата и обработки исключений.</li>
<li><strong>finally </strong>&#8212; ключевое слово для отметки начала блока кода, которой является дополнительным. Этот блок помещается после последнего блока &#8216;catch&#8217;. Управление обычно передаётся в блок &#8216;finally&#8217; в любом случае.</li>
<li><strong>throw </strong>&#8212; служит для генерации исключений.</li>
<li><strong>throws </strong>&#8212; ключевое слово, которое прописывается в сигнатуре метода, и обозначающее что метод потенциально может выбросить исключение с ук
"
);